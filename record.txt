>>>>>[Environment]
        Ubuntu16.04
        Ros-Kinetic

>>>>>[Brief Usage]
        #step 1 编译
        mkdir catkin_ws_robot_sim
        cd catkin_ws_robot_sim
        mkdir src
        cd src
        git clone
        cd ..
        cd ..
        catkin_make

        #step 2 启动ros
        bash
        roscore

        #step 3 建图
        bash
        cd catkin_ws_robot_sim
        source devel/setup.bash
        roslaunch robot_sim robot_mapping.launch

        #step 4 开启键盘控制
        bash
        cd catkin_ws_robot_sim
        source devel/setup.bash
        rosrun robot_sim teleop_twist_keyboard.py

        #step 5 保存地图
        bash
        cd catkin_ws_robot_sim
        source devel/setup.bash
        roslaunch robot_sim save_map.launch

        #step 6 定位与导航
        bash
        cd catkin_ws_robot_sim
        source devel/setup.bash
        roslaunch robot_sim robot_navigation.launch

>>>>>[Work Notes]
>>>>>20210413 main
        1.urdf创建小车模型
        2.add rviz/test.rviz
        3.add launch/test.launch
        4.joint_state_publisher_gui 控制关节运动会出现抽搐的情况。

>>>>>20210414 main
        1.创建urdf/xacro,用xacro创建小车模型，使用的是demo小车，带有激光雷达与camera。
        2.add config/mover_arbotix.yaml 模型控制移动配置文件。
        3.joint_state_publisher_gui 控制关节运动会出现抽搐的情况。（很迷惑）初步测试了一下，好像不是gui的问题。

>>>>>20210414 main
        1.xacro、urdf、gazebo融合仿真。
        2.add worlds/new_world.world。
        3.inertial.urdf.xacro中是计算惯性的宏方法。
        4.修改了所有.xacro文件，以此配合gazebo仿真。
        5.add launch test_gazebo.launch

>>>>>20210415 main
        1.delete *.urdf, add robot_car.urdf
        2.测试了坐标系抽搐的问题，新建了一个工程进行测试，还是会出错。
        3.add lidar sensors
        4.add velodyne lidar
        5.add gazebo_rviz.rviz

>>>>>20210416 main
        1.add sensor_camera.urdf.xacro, display.launch, mapping.launch, main.launch
        2.加入相机仿真，加入了gmapping栅格地图构建。
        3.加入键盘控制，控制仿真机器人移动。
        4.注意mapping.launch中的<remap from="scan" to="$(arg points_topic)"/> <!--程序包里面需要scan 映射到/velodyne_points-->。

>>>>>20210417 main
        1.clion 中编译工程出现提示catkin_make_environment_cache..., 可以尝试删除cmake-build-debug文件。
        2.修正对于teleop_twist_keyboard.py的错误修改。
        3.新增README.md
        4.如果提示找不到 teleop_twist_keyboard.py，在文件夹中出入sudo chmod 777 teleop_twist_keyboard.py(修改权限)。

>>>>>20210419 main
        1.删除了不必要的一些文件。
        2.加入amcl，地图保存，地图读取。
            <!-- AMCL(adaptive Monte Carlo Localization) 是用于2D移动机器人的概率定位系统，-->
            <!-- 它实现了自适应（或KLD采样）蒙特卡洛定位方法，可以根据已有地图使用粒子滤波器推算机器人位置。-->
        3.修改部分文件名，合理。
        4.*.rviz -> robot_sim_mapping.rviz 与 robot_sim_navigation.rviz
        5.add /map，nav.pgm，nav.yaml

>>>>>20210420 v1.7 main
        1.增加了move_base导航功能， add move_base.launch。
        2.原来的左右轮貌似写反了，即原版的键盘控制是正确的。
        3.增加了一众导航配置文件。/config
        4.base_local_planner_params.yaml里的几个参数很影响小车运行，特别是左右差速度。
        5.可以参考eaibot的配置文件。

>>>>>20210421 v1.7.1 main
        1.修正左右轮相反的问题。
        2.修正readme.md的错误。